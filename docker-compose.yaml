version: "3.2"

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    ports:
      - '2182:2182'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - superset-tier

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: topic:1:1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_RESTART_ATTEMPTS: 10
      KAFKA_RESTART_DELAY: 5
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
    healthcheck:
      test: nc -z 0.0.0.0 9092 || exit
      interval: 10s
      timeout: 5s
      retries: 15
    depends_on:
      - zookeeper
    networks:
      - superset-tier

  clickhouse:
    build:
      context: ./images/clickhouse
      dockerfile: Dockerfile
      args:
        - KAFKA_BROKER_LIST=kafka:9092
        - KAFKA_TOPIC_LIST=topic
        - KAFKA_GROUP_NAME=q_real_time_tx_processing_ch
    environment:
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_HOST: 0.0.0.0
      CLICKHOUSE_PASSWORD: clickhouse
    ports:
      - '8123:8123'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://0.0.0.0:8123/ping || exit 1
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - superset-tier

  redis:
    image: redis:7.0-alpine
    restart: always
    networks:
      - superset-tier

  postgres:
    image: postgres:15.0-alpine
    restart: always
    environment:
      POSTGRES_DB: superset
      POSTGRES_PASSWORD: superset
      POSTGRES_USER: superset
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 3s
      retries: 3
    depends_on:
      - redis
    networks:
      - superset-tier

  superset:
    container_name: superset
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      CACHE_REDIS_HOST: redis
      CACHE_REDIS_PORT: 6379
      CACHE_REDIS_DB: 1
      CACHE_REDIS_URL: redis://redis:6379/1

      SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://superset:superset@postgres:5432/superset
      
      CLICKHOUSE_PASSWORD: clickhouse

      SUPERSET_USERNAME: admin
      SUPERSET_PASSWORD: admin
      SUPERSET_FIRSTNAME: admin
      SUPERSET_LASTNAME: admin
      SUPERSET_EMAIL: admin@mail.ru
      SUPERSET_HOST: superset
      SUPERSET_PORT: 8088

      SECRET_KEY:
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    healthcheck:
      disable: true
    ports:
      - "8088:8088"
    networks:
      - superset-tier

  app:
    image: d41d8cd98f00b204e9800998e/quickview-streaming
    command: python3 app/__main__.py
    restart: always
    environment:
      WSS_NODE_PROVIDER:

      BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_BROKER_URL: kafka
      KAFKA_BROKER_PORT: 9092
      TOPIC_NAME: topic
    depends_on:
      clickhouse:
        condition: service_healthy
    networks:
      - superset-tier

networks:
  superset-tier:
